{"version":3,"sources":["../src/abandonseed.js"],"names":["invariant","abandonSeedAddresses","algorand","cosmos","cosmos_testnet","ripple","stellar","tezos","tron","ethereum","bitcoin","bitcoin_cash","bitcoin_gold","bitcoin_private","bitcoin_testnet","dash","decred","digibyte","dogecoin","game_credits","komodo","litecoin","nix","peercoin","pivx","polkadot","qtum","stakenet","stealthcoin","stratis","vertcoin","viacoin","zcash","zclassic","zcoin","zencash","getAbandonSeedAddress","currencyId","undefined"],"mappings":"AACA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,MAAMC,oBAA0C,GAAG;AACjDC,EAAAA,QAAQ,EAAE,4DADuC;AAEjDC,EAAAA,MAAM,EAAE,+CAFyC;AAGjDC,EAAAA,cAAc,EAAE,+CAHiC;AAIjDC,EAAAA,MAAM,EAAE,oCAJyC;AAKjDC,EAAAA,OAAO,EAAE,0DALwC;AAMjDC,EAAAA,KAAK,EAAE,sCAN0C;AAOjDC,EAAAA,IAAI,EAAE,4CAP2C;AAQjDC,EAAAA,QAAQ,EAAE,4CARuC;AASjDC,EAAAA,OAAO,EAAE,oCATwC;AAUjDC,EAAAA,YAAY,EAAE,mCAVmC;AAWjDC,EAAAA,YAAY,EAAE,oCAXmC;AAYjDC,EAAAA,eAAe,EAAE,qCAZgC;AAajDC,EAAAA,eAAe,EAAE,oCAbgC;AAcjDC,EAAAA,IAAI,EAAE,oCAd2C;AAejDC,EAAAA,MAAM,EAAE,EAfyC;AAerC;AACZC,EAAAA,QAAQ,EAAE,oCAhBuC;AAiBjDC,EAAAA,QAAQ,EAAE,oCAjBuC;AAkBjDC,EAAAA,YAAY,EAAE,oCAlBmC;AAmBjDC,EAAAA,MAAM,EAAE,oCAnByC;AAoBjDC,EAAAA,QAAQ,EAAE,oCApBuC;AAqBjDC,EAAAA,GAAG,EAAE,oCArB4C;AAsBjDC,EAAAA,QAAQ,EAAE,oCAtBuC;AAuBjDC,EAAAA,IAAI,EAAE,oCAvB2C;AAwBjDC,EAAAA,QAAQ,EAAE,sCAxBuC;AAyBjDC,EAAAA,IAAI,EAAE,oCAzB2C;AA0BjDC,EAAAA,QAAQ,EAAE,oCA1BuC;AA2BjDC,EAAAA,WAAW,EAAE,oCA3BoC;AA4BjDC,EAAAA,OAAO,EAAE,oCA5BwC;AA6BjDC,EAAAA,QAAQ,EAAE,oCA7BuC;AA8BjDC,EAAAA,OAAO,EAAE,oCA9BwC;AA+BjDC,EAAAA,KAAK,EAAE,qCA/B0C;AAgCjDC,EAAAA,QAAQ,EAAE,qCAhCuC;AAiCjDC,EAAAA,KAAK,EAAE,oCAjC0C;AAkCjDC,EAAAA,OAAO,EAAE;AAlCwC,CAAnD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAIC,UAAD,IAAgC;AACnErC,EAAAA,SAAS,CACPC,oBAAoB,CAACoC,UAAD,CAApB,KAAqCC,SAD9B,EAEN,gCAA+BD,UAAW,EAFpC,CAAT;AAIA,SAAOpC,oBAAoB,CAACoC,UAAD,CAA3B;AACD,CANM","sourcesContent":["// @flow\nimport invariant from \"invariant\";\n\nconst abandonSeedAddresses: { [string]: string } = {\n  algorand: \"PSHLIWQKDEETIIBQEOTLGCT5IF7BTTOKCUULONOGVGF2HYDT2IHW3H4CCI\",\n  cosmos: \"cosmos19rl4cm2hmr8afy4kldpxz3fka4jguq0auqdal4\",\n  cosmos_testnet: \"cosmos19rl4cm2hmr8afy4kldpxz3fka4jguq0auqdal4\",\n  ripple: \"rHsMGQEkVNJmpGWs8XUBoTBiAAbwxZN5v3\",\n  stellar: \"GDYPMQMYW2JTLPWAUAHIDY3E4VHP5SGTFC5SMA45L7ZPOTHWQ2PHEW3E\",\n  tezos: \"tz1VJitLYB31fEC82efFkLRU4AQUH9QgH3q6\",\n  tron: \"0x0000000000000000000000000000000000000000\",\n  ethereum: \"0x0000000000000000000000000000000000000000\",\n  bitcoin: \"1LqBGSKuX5yYUonjxT5qGfpUsXKYYWeabA\",\n  bitcoin_cash: \"1mW6fDEMjKrDHvLvoEsaeLxSCzZBf3Bfg\",\n  bitcoin_gold: \"GeTZ7bjfXtGsyEcerSSFJNUSZwLfjtCJX9\",\n  bitcoin_private: \"b1SGV7U5kGAMHtGbkAR3mjaZqVn57SHFbiR\",\n  bitcoin_testnet: \"mkpZhYtJu2r87Js3pDiWJDmPte2NRZ8bJV\",\n  dash: \"XoJA8qE3N2Y3jMLEtZ3vcN42qseZ8LvFf5\",\n  decred: \"\", // FIXME need to derivate decred abandon\n  digibyte: \"DG1KhhBKpsyWXTakHNezaDQ34focsXjN1i\",\n  dogecoin: \"DBus3bamQjgJULBJtYXpEzDWQRwF5iwxgC\",\n  game_credits: \"GJgbzWpGhrZmSvc2V5Npqf57Kg9xfB79tj\",\n  komodo: \"RW8gfgpCUdgZbkPAs1uJQF2S9681JVkGRi\",\n  litecoin: \"LUWPbpM43E2p7ZSh8cyTBEkvpHmr3cB8Ez\",\n  nix: \"GRpn2DPiQxAczMrQFt2sK1CS8EYdnvSHxo\",\n  peercoin: \"PFinP8Tm5hFJKfVnSMFfiNibPNfHgXzTDZ\",\n  pivx: \"DDBxSas734KhMp1Btga3LdwWAc1igSER8o\",\n  polkadot: \"111111111111111111111111111111111HC1\",\n  qtum: \"QPvRe2C17qk24K6v5gTg7CPghZ8b4WMxZP\",\n  stakenet: \"XhPU3ZrghEh387nqgQ1Fi16JvtkSeYdP4g\",\n  stealthcoin: \"SKsLkKVeMtPNZQuNfUNXi3Bk1TwP1QPqJG\",\n  stratis: \"Sdo6x9k5AxWtfyJe5B9SZPteYTKgUoMMr1\",\n  vertcoin: \"Vce16eJifb7HpuoTFEBJyKNLsBJPo7fM83\",\n  viacoin: \"VfwB3jbDWELpfiFNzbEVgx73HsR9bAq35C\",\n  zcash: \"t1XVXWCvpMgBvUaed4XDqWtgQgJSu1Ghz7F\",\n  zclassic: \"t1Qmwyih5F7Mw6Vts4tSnXuA2o3NgJPYNgP\",\n  zcoin: \"a1bW3sVVUsLqgKuTMXtSaAHGvpxKwugxPH\",\n  zencash: \"zngWJRgpBa45KUeRuCmdMsqti4ohhe9sVwC\",\n};\n\n/**\n * Returns a valid address for a given currency.\n * These addresses are PUBLIC addresses\n * We use them for tests and also for dry-run estimations\n * DO NOT USE AS RECIPIENT OR SIGN TRANSACTIONS INTO THEM\n * @param {*} currencyId\n */\nexport const getAbandonSeedAddress = (currencyId: string): string => {\n  invariant(\n    abandonSeedAddresses[currencyId] !== undefined,\n    `No abandonseed available for ${currencyId}`\n  );\n  return abandonSeedAddresses[currencyId];\n};\n"],"file":"abandonseed.js"}